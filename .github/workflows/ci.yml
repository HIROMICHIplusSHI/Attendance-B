name: CI/CD Pipeline 🚀

on:
  push:
    branches: [ main, develop, 'feature/*' ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: 🧪 テスト実行 (Ruby ${{ matrix.ruby-version }})
    runs-on: ubuntu-latest

    strategy:
      matrix:
        ruby-version: ['3.2.4']

    services:
      mysql:
        image: mysql:8.0.35
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: attendance_app_test
        options: >-
          --health-cmd="mysqladmin ping -h localhost"
          --health-interval=5s
          --health-timeout=3s
          --health-retries=10
          --health-start-period=30s
        ports:
          - 3306:3306

    steps:
    - name: 📥 リポジトリチェックアウト
      uses: actions/checkout@v4

    - name: 💎 Ruby ${{ matrix.ruby-version }} セットアップ
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: true

    - name: 📦 システム依存関係インストール
      run: |
        sudo apt-get update
        sudo apt-get install -y mysql-client libmysqlclient-dev

    - name: 🗄️ データベースセットアップ
      env:
        RAILS_ENV: test
        DB_HOST: 127.0.0.1
      run: |
        # MySQL接続待機
        for i in {1..30}; do
          if mysqladmin ping -h127.0.0.1 -uroot -ppassword --silent; then
            echo "MySQL is ready!"
            break
          fi
          echo "Waiting for MySQL... ($i/30)"
          sleep 2
        done

        bundle exec rails db:create
        bundle exec rails db:migrate

    - name: 🔍 RuboCop (コード品質チェック)
      run: bundle exec rubocop

    - name: 🧪 RSpec (テスト実行 + カバレッジ測定)
      env:
        RAILS_ENV: test
        DB_HOST: 127.0.0.1
      run: bundle exec rspec

    - name: 📊 カバレッジレポート確認
      run: |
        echo "📈 SimpleCovカバレッジレポートを確認中..."
        if [ -f coverage/.resultset.json ]; then
          echo "✅ カバレッジデータが生成されました"
          ls -la coverage/
        else
          echo "⚠️ カバレッジデータが見つかりません"
        fi

  deploy:
    name: 🚀 本番デプロイ
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push' && needs.test.result == 'success'

    steps:
    - name: 📥 リポジトリチェックアウト
      uses: actions/checkout@v4

    - name: 🚀 Renderデプロイ通知
      run: |
        echo "🚀 mainブランチへのプッシュを検知しました"
        echo "📡 Renderが自動デプロイを開始します"
        echo "🔗 デプロイ状況はRenderダッシュボードで確認できます"

    - name: ⏳ デプロイ完了待機
      run: |
        echo "⏳ Renderでのデプロイ完了をお待ちください..."
        echo "✅ 通常2-3分でデプロイが完了します"

  build_status:
    name: 📊 ビルド状況確認
    runs-on: ubuntu-latest
    needs: test
    if: always()

    steps:
    - name: 🎉 成功メッセージ
      if: needs.test.result == 'success'
      run: |
        echo "🎉 すべてのテストが成功しました！"
        if [[ "${{ github.ref }}" == "refs/heads/main" && "${{ github.event_name }}" == "push" ]]; then
          echo "🚀 本番環境へのデプロイが開始されました"
          echo "📡 Renderダッシュボードでデプロイ状況を確認してください"
        fi
        echo "✅ CI/CDパイプライン完了"

    - name: ❌ 失敗メッセージ
      if: needs.test.result != 'success'
      run: |
        echo "❌ テストまたはコード品質チェックで問題が見つかりました"
        echo "🔧 修正が必要です"
        exit 1