name: CI/CD Pipeline 🚀

on:
  push:
    branches: [ main, develop, 'feature/*' ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: 🧪 テスト実行 (Ruby ${{ matrix.ruby-version }})
    runs-on: ubuntu-latest

    strategy:
      matrix:
        ruby-version: ['3.2.4']

    services:
      mysql:
        image: mysql:8.0.35
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: attendance_app_test
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
        ports:
          - 3306:3306

    steps:
    - name: 📥 リポジトリチェックアウト
      uses: actions/checkout@v4

    - name: 💎 Ruby ${{ matrix.ruby-version }} セットアップ
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: true

    - name: 📦 システム依存関係インストール
      run: |
        sudo apt-get update
        sudo apt-get install -y mysql-client libmysqlclient-dev

    - name: 🗄️ データベースセットアップ
      env:
        RAILS_ENV: test
        DATABASE_URL: mysql2://root:password@127.0.0.1:3306/attendance_app_test
      run: |
        bundle exec rails db:create
        bundle exec rails db:migrate

    - name: 🔍 RuboCop (コード品質チェック)
      run: bundle exec rubocop

    - name: 🧪 RSpec (テスト実行)
      env:
        RAILS_ENV: test
        DATABASE_URL: mysql2://root:password@127.0.0.1:3306/attendance_app_test
      run: bundle exec rspec

  build_status:
    name: 📊 ビルド状況確認
    runs-on: ubuntu-latest
    needs: test
    if: always()

    steps:
    - name: 🎉 成功メッセージ
      if: needs.test.result == 'success'
      run: |
        echo "🎉 すべてのテストが成功しました！"
        echo "✅ CI/CDパイプライン完了"

    - name: ❌ 失敗メッセージ
      if: needs.test.result != 'success'
      run: |
        echo "❌ テストまたはコード品質チェックで問題が見つかりました"
        echo "🔧 修正が必要です"
        exit 1